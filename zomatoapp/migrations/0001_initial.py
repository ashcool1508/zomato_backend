# Generated by Django 4.0.4 on 2022-10-29 11:41

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='FoodItem',
            fields=[
                ('food_id', models.AutoField(primary_key=True, serialize=False)),
                ('food_name', models.CharField(max_length=122, null=True)),
                ('price', models.FloatField(blank=True, null=True)),
                ('food_type', models.CharField(max_length=122, null=True)),
                ('cuisine', models.CharField(max_length=122, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Rest',
            fields=[
                ('res_id', models.AutoField(primary_key=True, serialize=False)),
                ('res_name', models.CharField(max_length=122, null=True)),
                ('location', models.CharField(default='Gurugram', max_length=122)),
            ],
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=122, null=True)),
                ('food_item_tags', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='zomatoapp.fooditem')),
            ],
        ),
        migrations.AddField(
            model_name='fooditem',
            name='res_menu_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='zomatoapp.rest'),
        ),
        migrations.CreateModel(
            name='NewUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email Address')),
                ('first_name', models.CharField(blank=True, max_length=150)),
                ('username', models.CharField(blank=True, max_length=150, null=True)),
                ('start_Date', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
